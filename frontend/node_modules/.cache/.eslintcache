[{"/home/mahdi/Desktop/online-shop-linux/frontend/src/index.js":"1","/home/mahdi/Desktop/online-shop-linux/frontend/src/App.js":"2","/home/mahdi/Desktop/online-shop-linux/frontend/src/reportWebVitals.js":"3","/home/mahdi/Desktop/online-shop-linux/frontend/src/store.js":"4","/home/mahdi/Desktop/online-shop-linux/frontend/src/screens/HomeScreen.js":"5","/home/mahdi/Desktop/online-shop-linux/frontend/src/screens/ProductScreen.js":"6","/home/mahdi/Desktop/online-shop-linux/frontend/src/screens/ProductsScreen.js":"7","/home/mahdi/Desktop/online-shop-linux/frontend/src/screens/CartScreen.js":"8","/home/mahdi/Desktop/online-shop-linux/frontend/src/screens/StatsScreen.js":"9","/home/mahdi/Desktop/online-shop-linux/frontend/src/Dropdown/Dropdown.js":"10","/home/mahdi/Desktop/online-shop-linux/frontend/src/reducers/productReducers.js":"11","/home/mahdi/Desktop/online-shop-linux/frontend/src/reducers/paymentReducers.js":"12","/home/mahdi/Desktop/online-shop-linux/frontend/src/reducers/cartReducers.js":"13","/home/mahdi/Desktop/online-shop-linux/frontend/src/reducers/recordReducers.js":"14","/home/mahdi/Desktop/online-shop-linux/frontend/src/actions/productActions.js":"15","/home/mahdi/Desktop/online-shop-linux/frontend/src/actions/cartActions.js":"16","/home/mahdi/Desktop/online-shop-linux/frontend/src/actions/paymentActions.js":"17","/home/mahdi/Desktop/online-shop-linux/frontend/src/actions/recordActions.js":"18","/home/mahdi/Desktop/online-shop-linux/frontend/src/constants/productConstants.js":"19","/home/mahdi/Desktop/online-shop-linux/frontend/src/constants/paymentConstants.js":"20","/home/mahdi/Desktop/online-shop-linux/frontend/src/constants/cartConstants.js":"21","/home/mahdi/Desktop/online-shop-linux/frontend/src/constants/recordConstants.js":"22"},{"size":610,"mtime":1629732055251,"results":"23","hashOfConfig":"24"},{"size":2327,"mtime":1629113103000,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1629113103000,"results":"26","hashOfConfig":"24"},{"size":1194,"mtime":1629113103000,"results":"27","hashOfConfig":"24"},{"size":1630,"mtime":1629735720819,"results":"28","hashOfConfig":"24"},{"size":2588,"mtime":1629735728418,"results":"29","hashOfConfig":"24"},{"size":5833,"mtime":1629113103000,"results":"30","hashOfConfig":"24"},{"size":3410,"mtime":1629113103000,"results":"31","hashOfConfig":"24"},{"size":3127,"mtime":1629113103000,"results":"32","hashOfConfig":"24"},{"size":4749,"mtime":1629113103000,"results":"33","hashOfConfig":"24"},{"size":2754,"mtime":1629113103000,"results":"34","hashOfConfig":"24"},{"size":1095,"mtime":1629113103000,"results":"35","hashOfConfig":"24"},{"size":692,"mtime":1629113103000,"results":"36","hashOfConfig":"24"},{"size":1072,"mtime":1629113103000,"results":"37","hashOfConfig":"24"},{"size":2940,"mtime":1629113103000,"results":"38","hashOfConfig":"24"},{"size":968,"mtime":1629113103000,"results":"39","hashOfConfig":"24"},{"size":1246,"mtime":1629113103000,"results":"40","hashOfConfig":"24"},{"size":1279,"mtime":1629113103000,"results":"41","hashOfConfig":"24"},{"size":1015,"mtime":1629113103000,"results":"42","hashOfConfig":"24"},{"size":368,"mtime":1629113103000,"results":"43","hashOfConfig":"24"},{"size":98,"mtime":1629113103000,"results":"44","hashOfConfig":"24"},{"size":355,"mtime":1629113103000,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1u23o2h",{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mahdi/Desktop/online-shop-linux/frontend/src/index.js",[],"/home/mahdi/Desktop/online-shop-linux/frontend/src/App.js",["97"],"import './App.css';\nimport React from 'react'\nimport { BrowserRouter, Route , Link } from 'react-router-dom';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport ProductsScreen from './screens/ProductsScreen';\nimport CartScreen from './screens/CartScreen';\nimport StatsScreen from './screens/StatsScreen';\nimport Dropdown from './Dropdown/Dropdown';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\n\n\nfunction App() {\n  \n  const openMenu = () =>{\n    document.querySelector(\".sidebar\").classList.add(\"open\");\n  }\n  const closeMenu = () => {\n    document.querySelector(\".sidebar\").classList.remove(\"open\");\n  }\n\n  const state = store.getState();\n  // <Dropdown items={items}/>\n\n  return (\n    <Provider store={store}>\n\n    <BrowserRouter>\n    <div className=\"grid-container\">\n        <header className=\"header\">\n           <div className=\"brand\">\n             <button onClick={openMenu}>\n               &#9776; \n               </button>\n               <Link to=\"/\">Online Shop</Link>\n           </div>\n           <div className=\"header-links\">\n           <Dropdown _items={store.cart}/>\n            </div>\n        </header>\n        <aside className=\"sidebar\">\n          <button className=\"sidebar-close-button\" onClick={closeMenu}>x</button>\n          <ul className=\"bar-link\">\n            <li>\n              <Link className=\"link-products\" to=\"/products\">Admin</Link>\n            </li>\n            <li>\n              <Link className=\"link-home\"  to=\"/\">Home</Link>\n            </li>\n            <li>\n            <Link className=\"link-stats\"  to=\"/stats\">Stats</Link>\n\n            </li>\n            </ul>\n        </aside>\n        <main className=\"main\">\n            <div className=\"content\">\n              \n              <Route path=\"/products\" exact={true} component={ProductsScreen}/>\n              <Route path=\"/\" exact={true} component={HomeScreen}/>\n              <Route path=\"/product/:id\" component={ProductScreen}/>\n              <Route path=\"/cart/:id\" component={CartScreen}/>\n              <Route path=\"/stats\" component={StatsScreen}/>\n\n        </div>\n        \n        </main>\n        <footer className=\"footer\">\n            All Rights Reserved.\n        </footer>\n    </div>\n    </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","/home/mahdi/Desktop/online-shop-linux/frontend/src/reportWebVitals.js",[],"/home/mahdi/Desktop/online-shop-linux/frontend/src/store.js",[],"/home/mahdi/Desktop/online-shop-linux/frontend/src/screens/HomeScreen.js",["98","99","100"],"import React, {useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch} from 'react-redux';\nimport { listProducts} from '../actions/productActions';\n\nfunction HomeScreen (props){\n    const productList = useSelector(state=> state.productList);\n    const { products, loading , error } = productList;\n\n    const cart = useSelector(state => state.cart);\n    const {cartItems} = cart;\n\n    const dispatch = useDispatch();\n\n    //fetching data from server\n    useEffect(()=>{\n        dispatch(listProducts());\n        return ()=>{\n\n        };\n    },[])\n\n\n    const handleAddToCart = (id,name) => {\n        props.history.push(\"/cart/\" + id+\"?qty=\"+ 1)\n      };\n    \n    return loading? <div>loading..</div>:error ? <div>{error}</div>: <div>    \n\n    <ul className=\"products\">\n    {\n        products.map(product => \n            <li key={product._id}>\n            <div className=\"product\">\n            <Link to={'/product/' + product._id}>\n                 <img className=\"product-image\" src={product.urlImg} alt='' />\n            </Link>\n            <div className=\"product-name\">\n                <Link to={'/product/' + product._id}>{product.name}</Link>\n                </div>\n            <div className=\"product-description\">{product.description}</div>\n            <div className=\"product-price\">${product.price}</div>\n            <button className=\"pay-button\" id={product._id}\n             onClick={() => handleAddToCart(product._id,product.name)}>Add To Cart\n           </button>\n            </div> \n            </li>\n        )\n    }\n  </ul></div>\n}\n\nexport default HomeScreen;","/home/mahdi/Desktop/online-shop-linux/frontend/src/screens/ProductScreen.js",["101"],"import React ,{useEffect, useState} from 'react'\nimport { Link } from 'react-router-dom';\nimport \"../index.css\";\nimport {useSelector, useDispatch} from 'react-redux';\nimport {detailsProduct} from '../actions/productActions';\nexport default function ProductScreen(props) {\n    const [qty, setQty] = useState(1);\n    const productDetails = useSelector(state=>state.productDetails);\n    const {product, loading, error} = productDetails;\n    const dispatch = useDispatch();\n\n    useEffect(()=>{\n        dispatch(detailsProduct(props.match.params.id));\n        return ()=>{\n            \n        };\n    },[]);\n    const handleAddToCart= ()=>{\n        props.history.push(\"/cart/\" + props.match.params.id+\"?qty=\"+ qty)\n    }\n    return (\n        <div > \n            <div className=\"back-to-home\">\n                <Link to=\"/\">Back To Results</Link>\n            </div>\n            {loading? <div>loading..</div>:\n            error? <div>{error}</div>:\n            (\n                <div className=\"details\">\n                <div className=\"details-image\">\n                    <img src={product.urlImg} alt=\"product\">\n                    </img>\n                </div>\n                <div className=\"details-info\">\n                    <ul>\n                        <li>\n                            <h4>{product.name}</h4>\n                        </li>\n                        <li>\n                            <h4>{product.description}</h4> \n                        </li>\n                        <li>\n                            <b>{product.price}$</b>\n                        </li>\n                    </ul>\n                </div>\n                <div className=\"details-action\">\n                    <ul>\n                        <li>\n                            Price: {product.price}$\n                        </li>\n                        <li>\n                            Qty: <select value={qty} onChange={(e)=>{setQty(e.target.value)}}>\n                                {[...Array(product.countInStock).keys()].map(x=>\n                                    <option key={x+1} value={x+1}>{x+1}</option>)}\n                            </select>\n                        </li>\n                        <li>\n                            {product.countInStock>0 ?\n                             <button onClick={handleAddToCart} className=\"add-cart-btn\">Add to cart</button>\n                            :<div className=\"out-of-stock\">Not Available</div>}\n                        </li>\n                        </ul>\n                </div>\n\n            </div>\n            )    \n        }\n\n        </div>\n    )\n}\n","/home/mahdi/Desktop/online-shop-linux/frontend/src/screens/ProductsScreen.js",["102","103","104","105","106","107"],"import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport {\n  saveProduct,\n  listProducts,\n  deleteProduct,\n} from '../actions/productActions';\n\nfunction ProductsScreen(props) {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [id, setId] = useState('');\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState('');\n  const [urlImg, setImage] = useState('');\n  const [countInStock, setCountInStock] = useState('');\n  const [description, setDescription] = useState('');\n  const productList = useSelector((state) => state.productList);\n  const { loading, products, error } = productList;\n\n  const productSave = useSelector((state) => state.productSave);\n  const {\n    loading: loadingSave,\n    success: successSave,\n    error: errorSave,\n  } = productSave;\n\n  const productDelete = useSelector((state) => state.productDelete);\n  const {\n    loading: loadingDelete,\n    success: successDelete,\n    error: errorDelete,\n  } = productDelete;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (successSave) {\n      setModalVisible(false);\n    }\n    dispatch(listProducts());\n    return () => {\n      //\n    };\n  }, [successSave, successDelete]);\n\n  const openModal = (product) => {\n    setModalVisible(true);\n    setId(product._id);\n    setName(product.name);\n    setPrice(product.price);\n    setDescription(product.description);\n    setImage(product.urlImg);\n    setCountInStock(product.countInStock);\n  };\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      saveProduct({\n        _id: id,\n        name,\n        urlImg,\n        description,\n        price,\n        countInStock,\n      })\n    );\n  };\n\n\n\n  const deleteHandler = (product) => {\n    alert(product._id)\n    dispatch(deleteProduct(product._id));\n  };\n\n  return (\n    <div className=\"content content-margined\">\n      <div className=\"product-header\">\n        <h3>Managing Products - Admin</h3>\n        <button className=\"button primary\" onClick={() => openModal({})}>\n          New Product\n        </button>\n      </div>\n      {modalVisible && (\n        <div className=\"form\">\n          <form onSubmit={submitHandler}>\n            <ul className=\"form-container\">\n              <li>\n                <h2>Product Details</h2>\n              </li>\n              <li>\n                {loadingSave && <div>Loading...</div>}\n                {errorSave && <div>{errorSave}</div>}\n              </li>\n\n              <li>\n                <label htmlFor=\"name\">Name</label>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={name}\n                  id=\"name\"\n                  onChange={(e) => setName(e.target.value)}\n                ></input>\n              </li>\n              <li>\n                <label htmlFor=\"name\">url Image</label>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={urlImg}\n                  id=\"name\"\n                  onChange={(e) => setImage(e.target.value)}\n                ></input>\n              </li>             \n              <li>\n                <label htmlFor=\"price\">Price</label>\n                <input\n                  type=\"text\"\n                  name=\"price\"\n                  value={price}\n                  id=\"price\"\n                  onChange={(e) => setPrice(e.target.value)}\n                ></input>\n              </li>\n\n\n              <li>\n                <label htmlFor=\"countInStock\">CountInStock</label>\n                <input\n                  type=\"text\"\n                  name=\"countInStock\"\n                  value={countInStock}\n                  id=\"countInStock\"\n                  onChange={(e) => setCountInStock(e.target.value)}\n                ></input>\n              </li>\n\n              <li>\n                <label htmlFor=\"description\">Description</label>\n                <textarea\n                  name=\"description\"\n                  value={description}\n                  id=\"description\"\n                  onChange={(e) => setDescription(e.target.value)}\n                ></textarea>\n              </li>\n              <li>\n                <button type=\"submit\" className=\"button primary\">\n                  {id ? 'Update' : 'Create'}\n                </button>\n              </li>\n              <li>\n                <button\n                  type=\"button\"\n                  onClick={() => setModalVisible(false)}\n                  className=\"button secondary\"\n                >\n                  Back\n                </button>\n              </li>\n            </ul>\n          </form>\n        </div>\n      )}\n\n      <div className=\"product-list\">\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Name</th>\n              <th>urlImg</th>\n              <th>Price</th>\n              <th>Description</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {products.map((product) => (\n              <tr key={product._id}>\n                <td>{product._id}</td>\n                <td>{product.name}</td>\n                <td>{product.urlImg}</td>\n                <td>{product.price}</td>\n                <td>{product.description}</td>\n                <td>\n                  <button className=\"button\" onClick={() => openModal(product)}>\n                    Edit\n                  </button>{' '}\n                  <button\n                    className=\"button\"\n                    onClick={() => deleteHandler(product)}\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\nexport default ProductsScreen;","/home/mahdi/Desktop/online-shop-linux/frontend/src/screens/CartScreen.js",["108"],"import React, {useEffect } from 'react';\nimport {addToCart,removeFromCart} from '../actions/cartActions';\nimport {useSelector,useDispatch} from 'react-redux';\nimport {\n    Link\n  } from \"react-router-dom\";\n\nfunction CartScreen(props){\n    const cart = useSelector(state => state.cart);\n    const {cartItems} = cart;\n\n    const productId = props.match.params.id;\n    const qty = props.location.search? Number(props.location.search.split(\"=\")[1]):1;\n    const dispatch = useDispatch();\n\n\n\n\n    const removeFromCartHandler = (productId) =>{\n        dispatch(removeFromCart(productId));\n    }\n    useEffect(()=>{\n        if(productId)\n        {\n            dispatch(addToCart(productId,qty));\n        }\n    },[]);\n    const checkoutHandler = () =>{\n        props.history.push(\"/redirect=shipping\");\n    }\n    return <div className=\"cart\">\n        <div className=\"cart-list\">\n            <ul className=\"cart-list-container\">\n                <li>\n                    <h3>\n                        Shopping Cart\n                    </h3>\n                    <div>\n                    Price\n                    </div>\n                </li>\n                {\n                    cartItems.length === 0 ?\n                    <div>\n                        cart is empty\n                    </div>\n                    :\n                    cartItems.map(item=> \n                        <li key={item.product}> \n                               <div className=\"cart-image\">\n                                    <img src={item.urlImg} className=\"\" alt=\"product\"/>\n                                </div>\n                                <div className=\"cart-name\">\n                                    <div>\n                                        <Link to={\"/product/\"+ item.product}>\n                                        {item.name}\n                                        </Link>\n                                    </div>\n                                    <div>\n                                        Qty:\n                                        <select value={item.qty} onChange={(e)=> dispatch(addToCart(item.product, e.target.value))}>\n                                            {[...Array(item.countInStock).keys()].map(x=>\n                                                <option key={x+1} value={x+1}>{x+1}</option>)\n                                            }\n                                        </select>\n                                        <button type=\"button\" className=\"button\" onClick={()=>removeFromCartHandler(item.product)}>\n                                            Delete\n                                        </button>\n                                    </div>\n                                </div>\n                                <div className=\"cart-price\"> \n                                    {item.price}$\n                                </div>\n                        </li>\n                        )\n                     }\n            </ul>\n        </div>\n        <div className=\"cart-action\">\n            <h3>\n                subTotal({cartItems.reduce((a,c)=>a+c.qty,0)} items)\n                :\n            ${cartItems.reduce((a,c) =>a + c.price* c.qty, 0)}\n            </h3>\n            <button className= \"button primary full-width\" onClick={checkoutHandler} disabled={cartItems.length===0}>Proceed to CheckOut</button>\n        </div>\n    </div>\n}\n\nexport default CartScreen;","/home/mahdi/Desktop/online-shop-linux/frontend/src/screens/StatsScreen.js",["109","110","111","112"],"import React, {useEffect} from 'react';\nimport { listPayments} from '../actions/paymentActions';\nimport { listRecords} from '../actions/recordActions';\nimport { useSelector, useDispatch} from 'react-redux';\n\n\nfunction StatsScreen(props){\n\n    const dispatch = useDispatch();\n    const paymentsList = useSelector(state=> state.paymentList);\n    const recordList = useSelector(state=> state.recordList);\n    const { payments, loading , error } = paymentsList;\n    const { records, loading_ , error_ } = recordList;\n    function getTopSold(){\n        let items = [];\n        records.map(x=>\n            items.push(x.item)\n        )\n        var counts = {};\n        items.forEach(function(x) { counts[x] = (counts[x] || 0)+1; });\n        const myJSON = JSON.stringify(counts);\n        console.log(\"items:\",myJSON);\n        return myJSON;\n    }\n    //fetching data from server\n    useEffect(()=>{\n        dispatch(listPayments());\n        return ()=>{\n        };\n    },[])\n    //fetching data from server\n    useEffect(()=>{\n        getTopSold() \n        dispatch(listRecords());\n        return ()=>{\n        };\n    },[])\n\n\n    return loading? <div>loading..</div>:error ? <div>{error}</div>:     <div>\n            {payments.length<1 ? <div>no payments yet</div> :\n            <div className=\"container\">\n\n            <div className=\"top-sel-payment\">\n\n                <h2>Top 5 Sel</h2>\n            <div className=\"gaps\"></div>    \n\n                <div className=\"item-payment-name\">\n                    {getTopSold()}\n                </div>\n                <div className=\"gaps\"></div>    \n\n            </div>\n\n            <div className=\"unique-sel\"> \n\n                <h2>Top 5 unique sel</h2>\n                <div className=\"gaps\"></div>    \n                <div className=\"item-payment-name\">\n                    {getTopSold()}\n                </div>\n                <div className=\"gaps\"></div>    \n            </div>\n            <div className=\"past-days-sel\"> \n\n                <h2>Past 5 days $</h2>\n                <div className=\"gaps\"></div>    \n\n                <div className=\"item-payment-name\">\n                    {\n                        getTopSold()\n                    }\n                </div>\n                <div className=\"gaps\"></div>    \n\n            </div>\n\n\n            </div>\n            \n            }\n\n<div className=\"top-sel-payment\">\n                <h2>all payments</h2>\n                {\n               payments.map(item=> \n                <li key={item.product}> \n                        <div className=\"gaps\"></div>                     \n\n                        <div className=\"item-payment-name\">\n                            Product: {item.name}\n                        </div>\n                        <div className=\"item-payment-price\"> \n                            Total Money gained: {item.totalAmount}$\n                        </div>\n                        <div className=\"item-payment-price\"> \n                            Sold at: {item.date}\n                        </div>         \n                </li>\n                 )} \n            </div>\n    </div>\n}\n\nexport default StatsScreen;","/home/mahdi/Desktop/online-shop-linux/frontend/src/Dropdown/Dropdown.js",["113","114","115","116"],"import React, {useState,useEffect } from 'react';\nimport {addToCart,removeFromCart} from '../actions/cartActions';\nimport {useSelector,useDispatch} from 'react-redux';\nimport {saveRecord} from '../actions/recordActions';\nimport {\n    savePayment,\n  } from '../actions/paymentActions';\n\nimport {\n    Link\n  } from \"react-router-dom\";\n\nfunction Dropdown(){\n    const cart = useSelector(state => state.cart);\n    const {cartItems} = cart;\n    const dispatch = useDispatch();\n    const [open , setOpen] = useState(false);\n\n    const recordList = useSelector(state=> state.recordList);\n    const { records, loading_ , error_ } = recordList;\n\n\n\n\n    const toggle = ()=> {\n        if(open){\n          document.querySelector(\".dd-wrapper\").classList.add(\"open\");\n            \n        }\n        else{\n            document.querySelector(\".dd-wrapper\").classList.remove(\"open\");\n        }\n        setOpen(!open);\n    }\n\n    const handleCart= ()=>{\n        setOpen(!open);\n    }\n    const handleClose= ()=>{\n        setOpen(!open);\n    }\n    useEffect(()=>{\n\n    },[]);\n\n    const checkoutHandler = (e) => {\n        e.preventDefault();\n        const totalAmount= cartItems.reduce((a,c) =>a + c.price* c.qty, 0);\n        dispatch(\n          savePayment({\n              cartItems,\n              totalAmount,\n              date:new Date(),\n          })\n        );\n        cartItems.map(item=> \n                    addSale(item.name)\n        );\n       function addSale(item){\n        let soldAmount=1;\n        const record = records.map(x=>\n            x.item === item); \n        if(record===null || records.length===0)\n            console.log('records null')\n        records.map(x=>\n            console.log('its here'+x)\n               ); \n        if(record.length>0){\n          console.log('record found'+record);\n          soldAmount = record.soldAmount+1; \n        }\n        console.log('current sold amount'+soldAmount);\n\n        dispatch(saveRecord({\n            item,\n            soldAmount,\n            date:new Date()\n        }))\n       }\n\n\n    };\n    return <div> {!open?  <div className=\"cart-title-bar\" onClick={handleCart}>Cart-{cartItems.length}</div>\n    :\n    <div className=\"dd-wrapper\">\n                    <div \n            tabIndex={0}\n             className=\"dd-header\"\n              role=\"button\" \n              onKeyPress={()=>toggle(!open)}\n            onClick={()=>toggle(!open)}></div>\n                    <div className=\"dd-header_action\">\n                <p>{open?<div className=\"close-title-bar\" onClick={handleClose}>X</div>: 'Cart-'+cartItems.length}</p>\n            </div>\n        <div className=\"dd-header\">\n            <ul className=\"cart-list-container\">\n                    <h3>\n                        Shopping Cart\n                    </h3>\n                <li>\n\n                    <div>\n                    Product\n                    </div>\n                    <div>\n                    Price\n                    </div>\n                </li>\n                {\n                    cartItems.length === 0 ?\n                    <div>\n                        Cart is empty\n                    </div>\n                    :\n                    cartItems.map(item=> \n                        <li key={item.product}> \n                            \n                               <div className=\"cart-image\">\n                                    <img src={item.urlImg} className=\"\" alt=\"product\"/>\n                                </div>\n                                <div className=\"cart-name\">\n                                    <div>\n                                        <Link to={\"/product/\"+ item.product}>\n                                        {item.name}\n                                        </Link>\n                                    </div>\n                                    <div>\n                                    </div>\n                                </div>\n                                <div className=\"cart-price\"> \n                                    {item.price}$\n                                </div>\n                        </li>\n                        )\n                     }\n            </ul>\n        </div>\n        <div className=\"cart-action-nav\">\n            <h3>\n                Total({cartItems.reduce((a,c)=>a+c.qty,0)} items)\n                :\n            ${cartItems.reduce((a,c) =>a + c.price* c.qty, 0)}\n            </h3>\n            <button className= \"button primary full-width pay-button\"\n            id=\"paymentbtn\"\n             onClick={checkoutHandler}\n              disabled={cartItems.length===0}>\n                  {cartItems.length === 0 ? <div>Add Items to Pay :)</div> : <div>Pay</div>}\n            </button>\n        </div>\n    </div> }\n    </div>\n}\n\nexport default Dropdown;","/home/mahdi/Desktop/online-shop-linux/frontend/src/reducers/productReducers.js",[],"/home/mahdi/Desktop/online-shop-linux/frontend/src/reducers/paymentReducers.js",[],"/home/mahdi/Desktop/online-shop-linux/frontend/src/reducers/cartReducers.js",[],"/home/mahdi/Desktop/online-shop-linux/frontend/src/reducers/recordReducers.js",[],"/home/mahdi/Desktop/online-shop-linux/frontend/src/actions/productActions.js",[],"/home/mahdi/Desktop/online-shop-linux/frontend/src/actions/cartActions.js",[],"/home/mahdi/Desktop/online-shop-linux/frontend/src/actions/paymentActions.js",[],"/home/mahdi/Desktop/online-shop-linux/frontend/src/actions/recordActions.js",[],"/home/mahdi/Desktop/online-shop-linux/frontend/src/constants/productConstants.js",[],"/home/mahdi/Desktop/online-shop-linux/frontend/src/constants/paymentConstants.js",[],"/home/mahdi/Desktop/online-shop-linux/frontend/src/constants/cartConstants.js",[],"/home/mahdi/Desktop/online-shop-linux/frontend/src/constants/recordConstants.js",[],{"ruleId":"117","severity":1,"message":"118","line":24,"column":9,"nodeType":"119","messageId":"120","endLine":24,"endColumn":14},{"ruleId":"117","severity":1,"message":"121","line":1,"column":16,"nodeType":"119","messageId":"120","endLine":1,"endColumn":24},{"ruleId":"117","severity":1,"message":"122","line":11,"column":12,"nodeType":"119","messageId":"120","endLine":11,"endColumn":21},{"ruleId":"123","severity":1,"message":"124","line":21,"column":7,"nodeType":"125","endLine":21,"endColumn":9,"suggestions":"126"},{"ruleId":"123","severity":1,"message":"127","line":17,"column":7,"nodeType":"125","endLine":17,"endColumn":9,"suggestions":"128"},{"ruleId":"117","severity":1,"message":"129","line":3,"column":8,"nodeType":"119","messageId":"120","endLine":3,"endColumn":13},{"ruleId":"117","severity":1,"message":"130","line":19,"column":11,"nodeType":"119","messageId":"120","endLine":19,"endColumn":18},{"ruleId":"117","severity":1,"message":"131","line":19,"column":30,"nodeType":"119","messageId":"120","endLine":19,"endColumn":35},{"ruleId":"117","severity":1,"message":"132","line":30,"column":14,"nodeType":"119","messageId":"120","endLine":30,"endColumn":27},{"ruleId":"117","severity":1,"message":"133","line":32,"column":12,"nodeType":"119","messageId":"120","endLine":32,"endColumn":23},{"ruleId":"123","severity":1,"message":"124","line":44,"column":6,"nodeType":"125","endLine":44,"endColumn":34,"suggestions":"134"},{"ruleId":"123","severity":1,"message":"135","line":27,"column":7,"nodeType":"125","endLine":27,"endColumn":9,"suggestions":"136"},{"ruleId":"117","severity":1,"message":"137","line":13,"column":22,"nodeType":"119","messageId":"120","endLine":13,"endColumn":30},{"ruleId":"117","severity":1,"message":"138","line":13,"column":33,"nodeType":"119","messageId":"120","endLine":13,"endColumn":39},{"ruleId":"123","severity":1,"message":"124","line":30,"column":7,"nodeType":"125","endLine":30,"endColumn":9,"suggestions":"139"},{"ruleId":"123","severity":1,"message":"140","line":37,"column":7,"nodeType":"125","endLine":37,"endColumn":9,"suggestions":"141"},{"ruleId":"117","severity":1,"message":"142","line":2,"column":9,"nodeType":"119","messageId":"120","endLine":2,"endColumn":18},{"ruleId":"117","severity":1,"message":"143","line":2,"column":19,"nodeType":"119","messageId":"120","endLine":2,"endColumn":33},{"ruleId":"117","severity":1,"message":"137","line":20,"column":22,"nodeType":"119","messageId":"120","endLine":20,"endColumn":30},{"ruleId":"117","severity":1,"message":"138","line":20,"column":33,"nodeType":"119","messageId":"120","endLine":20,"endColumn":39},"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'cartItems' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["144"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.id'. Either include them or remove the dependency array.",["145"],"'axios' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'loadingDelete' is assigned a value but never used.","'errorDelete' is assigned a value but never used.",["146"],"React Hook useEffect has missing dependencies: 'dispatch', 'productId', and 'qty'. Either include them or remove the dependency array.",["147"],"'loading_' is assigned a value but never used.","'error_' is assigned a value but never used.",["148"],"React Hook useEffect has missing dependencies: 'dispatch' and 'getTopSold'. Either include them or remove the dependency array.",["149"],"'addToCart' is defined but never used.","'removeFromCart' is defined but never used.",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"150","fix":"158"},{"desc":"159","fix":"160"},"Update the dependencies array to be: [dispatch]",{"range":"161","text":"162"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"163","text":"164"},"Update the dependencies array to be: [successSave, successDelete, dispatch]",{"range":"165","text":"166"},"Update the dependencies array to be: [dispatch, productId, qty]",{"range":"167","text":"168"},{"range":"169","text":"162"},"Update the dependencies array to be: [dispatch, getTopSold]",{"range":"170","text":"171"},[598,600],"[dispatch]",[599,601],"[dispatch, props.match.params.id]",[1243,1271],"[successSave, successDelete, dispatch]",[705,707],"[dispatch, productId, qty]",[964,966],[1113,1115],"[dispatch, getTopSold]"]