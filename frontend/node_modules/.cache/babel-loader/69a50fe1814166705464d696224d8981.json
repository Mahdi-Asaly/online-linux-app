{"ast":null,"code":"import _regeneratorRuntime from\"/home/mahdi/Desktop/online-shop-linux/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/mahdi/Desktop/online-shop-linux/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{PRODUCT_RECORD_REQUEST,PRODUCT_RECORD_SUCCESS,PRODUCT_RECORD_FAIL,RECORD_SAVE_REQUEST,RECORD_SAVE_SUCCESS,RECORD_SAVE_FAIL}from'../constants/recordConstants';import axios from'axios';var listRecords=function listRecords(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var _yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;dispatch({type:PRODUCT_RECORD_REQUEST});_context.next=4;return axios.get('/api/records');case 4:_yield$axios$get=_context.sent;data=_yield$axios$get.data;dispatch({type:PRODUCT_RECORD_SUCCESS,payload:data});_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);dispatch({type:PRODUCT_RECORD_FAIL,payload:_context.t0.message});case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function(_x){return _ref.apply(this,arguments);};}();};var saveRecord=function saveRecord(records){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch,getState){var _yield$axios$post,data,_yield$axios$put,_data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;dispatch({type:RECORD_SAVE_REQUEST,payload:records});if(records._id){_context2.next=10;break;}_context2.next=5;return axios.post('/api/records',records);case 5:_yield$axios$post=_context2.sent;data=_yield$axios$post.data;dispatch({type:RECORD_SAVE_SUCCESS,payload:data});_context2.next=16;break;case 10:console.log('updating record cuz its found');_context2.next=13;return axios.put('/api/records/'+records.item,records);case 13:_yield$axios$put=_context2.sent;_data=_yield$axios$put.data;dispatch({type:RECORD_SAVE_SUCCESS,payload:_data});case 16:_context2.next=21;break;case 18:_context2.prev=18;_context2.t0=_context2[\"catch\"](0);dispatch({type:RECORD_SAVE_FAIL,payload:_context2.t0.message});case 21:case\"end\":return _context2.stop();}}},_callee2,null,[[0,18]]);}));return function(_x2,_x3){return _ref2.apply(this,arguments);};}();};export{saveRecord,listRecords};","map":{"version":3,"sources":["/home/mahdi/Desktop/online-shop-linux/frontend/src/actions/recordActions.js"],"names":["PRODUCT_RECORD_REQUEST","PRODUCT_RECORD_SUCCESS","PRODUCT_RECORD_FAIL","RECORD_SAVE_REQUEST","RECORD_SAVE_SUCCESS","RECORD_SAVE_FAIL","axios","listRecords","dispatch","type","get","data","payload","message","saveRecord","records","getState","_id","post","console","log","put","item"],"mappings":"uUAAA,OACIA,sBADJ,CAEIC,sBAFJ,CAGIC,mBAHJ,CAIIC,mBAJJ,CAKIC,mBALJ,CAMIC,gBANJ,KAOS,8BAPT,CAQE,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAIA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,kGAAM,iBAAOC,QAAP,4JAEtBA,QAAQ,CAAC,CAAEC,IAAI,CAAET,sBAAR,CAAD,CAAR,CAFsB,sBAGCM,CAAAA,KAAK,CAACI,GAAN,CACrB,cADqB,CAHD,uCAGdC,IAHc,kBAGdA,IAHc,CAMtBH,QAAQ,CAAC,CAAEC,IAAI,CAAER,sBAAR,CAAgCW,OAAO,CAAED,IAAzC,CAAD,CAAR,CANsB,+EAQtBH,QAAQ,CAAC,CAAEC,IAAI,CAAEP,mBAAR,CAA6BU,OAAO,CAAE,YAAMC,OAA5C,CAAD,CAAR,CARsB,oEAAN,gEAApB,CAWA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,OAAD,kGAAa,kBAAOP,QAAP,CAAiBQ,QAAjB,yLAE5BR,QAAQ,CAAC,CAAEC,IAAI,CAAEN,mBAAR,CAA6BS,OAAO,CAAEG,OAAtC,CAAD,CAAR,CAF4B,GAGvBA,OAAO,CAACE,GAHe,kDAIHX,CAAAA,KAAK,CAACY,IAAN,CAAW,cAAX,CAA2BH,OAA3B,CAJG,yCAIlBJ,IAJkB,mBAIlBA,IAJkB,CAK1BH,QAAQ,CAAC,CAAEC,IAAI,CAAEL,mBAAR,CAA6BQ,OAAO,CAAED,IAAtC,CAAD,CAAR,CAL0B,gCAO1BQ,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAP0B,wBAQHd,CAAAA,KAAK,CAACe,GAAN,CACrB,gBAAkBN,OAAO,CAACO,IADL,CACUP,OADV,CARG,yCAQlBJ,KARkB,kBAQlBA,IARkB,CAU1BH,QAAQ,CAAC,CAAEC,IAAI,CAAEL,mBAAR,CAA6BQ,OAAO,CAAED,KAAtC,CAAD,CAAR,CAV0B,6FAa5BH,QAAQ,CAAC,CAAEC,IAAI,CAAEJ,gBAAR,CAA0BO,OAAO,CAAE,aAAMC,OAAzC,CAAD,CAAR,CAb4B,uEAAb,sEAAnB,CAmBA,OACEC,UADF,CAEEP,WAFF","sourcesContent":["import {\n    PRODUCT_RECORD_REQUEST,\n    PRODUCT_RECORD_SUCCESS,\n    PRODUCT_RECORD_FAIL,\n    RECORD_SAVE_REQUEST,\n    RECORD_SAVE_SUCCESS,\n    RECORD_SAVE_FAIL,\n  } from '../constants/recordConstants';\n  import axios from 'axios';\n  \n  \n  \n  const listRecords = () => async (dispatch) => {\n    try {\n      dispatch({ type: PRODUCT_RECORD_REQUEST });\n      const { data } = await axios.get(\n        '/api/records'\n      );\n      dispatch({ type: PRODUCT_RECORD_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({ type: PRODUCT_RECORD_FAIL, payload: error.message });\n    }\n  };\n  const saveRecord = (records) => async (dispatch, getState) => {\n    try {\n      dispatch({ type: RECORD_SAVE_REQUEST, payload: records });\n      if (!records._id) {\n        const { data } = await axios.post('/api/records', records);\n        dispatch({ type: RECORD_SAVE_SUCCESS, payload: data });\n      } else {\n        console.log('updating record cuz its found');\n        const { data } = await axios.put(\n          '/api/records/' + records.item,records);\n        dispatch({ type: RECORD_SAVE_SUCCESS, payload: data });\n      }\n    } catch (error) {\n      dispatch({ type: RECORD_SAVE_FAIL, payload: error.message });\n    }\n  };\n  \n\n\n  export {\n    saveRecord,\n    listRecords,\n  };"]},"metadata":{},"sourceType":"module"}