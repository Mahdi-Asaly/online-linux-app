{"ast":null,"code":"import { PRODUCT_RECORD_REQUEST, PRODUCT_RECORD_SUCCESS, PRODUCT_RECORD_FAIL, RECORD_SAVE_REQUEST, RECORD_SAVE_SUCCESS, RECORD_SAVE_FAIL } from '../constants/recordConstants';\nimport axios from 'axios';\n\nconst listRecords = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_RECORD_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/records');\n    dispatch({\n      type: PRODUCT_RECORD_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_RECORD_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveRecord = records => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: RECORD_SAVE_REQUEST,\n      payload: records\n    });\n\n    if (!records._id) {\n      const {\n        data\n      } = await axios.post('/api/records', records);\n      dispatch({\n        type: RECORD_SAVE_SUCCESS,\n        payload: data\n      });\n    } else {\n      console.log('updating record cuz its found');\n      const {\n        data\n      } = await axios.put('/api/records/' + records.item, records);\n      dispatch({\n        type: RECORD_SAVE_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: RECORD_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { saveRecord, listRecords };","map":{"version":3,"sources":["/home/mahdi/Desktop/online-shop-linux/frontend/src/actions/recordActions.js"],"names":["PRODUCT_RECORD_REQUEST","PRODUCT_RECORD_SUCCESS","PRODUCT_RECORD_FAIL","RECORD_SAVE_REQUEST","RECORD_SAVE_SUCCESS","RECORD_SAVE_FAIL","axios","listRecords","dispatch","type","data","get","payload","error","message","saveRecord","records","getState","_id","post","console","log","put","item"],"mappings":"AAAA,SACIA,sBADJ,EAEIC,sBAFJ,EAGIC,mBAHJ,EAIIC,mBAJJ,EAKIC,mBALJ,EAMIC,gBANJ,QAOS,8BAPT;AAQE,OAAOC,KAAP,MAAkB,OAAlB;;AAIA,MAAMC,WAAW,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC5C,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET;AAAR,KAAD,CAAR;AACA,UAAM;AAAEU,MAAAA;AAAF,QAAW,MAAMJ,KAAK,CAACK,GAAN,CACrB,cADqB,CAAvB;AAGAH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,sBAAR;AAAgCW,MAAAA,OAAO,EAAEF;AAAzC,KAAD,CAAR;AACD,GAND,CAME,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,mBAAR;AAA6BU,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAA5C,KAAD,CAAR;AACD;AACF,CAVD;;AAWA,MAAMC,UAAU,GAAIC,OAAD,IAAa,OAAOR,QAAP,EAAiBS,QAAjB,KAA8B;AAC5D,MAAI;AACFT,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,mBAAR;AAA6BS,MAAAA,OAAO,EAAEI;AAAtC,KAAD,CAAR;;AACA,QAAI,CAACA,OAAO,CAACE,GAAb,EAAkB;AAChB,YAAM;AAAER,QAAAA;AAAF,UAAW,MAAMJ,KAAK,CAACa,IAAN,CAAW,cAAX,EAA2BH,OAA3B,CAAvB;AACAR,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEL,mBAAR;AAA6BQ,QAAAA,OAAO,EAAEF;AAAtC,OAAD,CAAR;AACD,KAHD,MAGO;AACLU,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACA,YAAM;AAAEX,QAAAA;AAAF,UAAW,MAAMJ,KAAK,CAACgB,GAAN,CACrB,kBAAkBN,OAAO,CAACO,IADL,EACUP,OADV,CAAvB;AAEAR,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEL,mBAAR;AAA6BQ,QAAAA,OAAO,EAAEF;AAAtC,OAAD,CAAR;AACD;AACF,GAXD,CAWE,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,gBAAR;AAA0BO,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAAzC,KAAD,CAAR;AACD;AACF,CAfD;;AAmBA,SACEC,UADF,EAEER,WAFF","sourcesContent":["import {\n    PRODUCT_RECORD_REQUEST,\n    PRODUCT_RECORD_SUCCESS,\n    PRODUCT_RECORD_FAIL,\n    RECORD_SAVE_REQUEST,\n    RECORD_SAVE_SUCCESS,\n    RECORD_SAVE_FAIL,\n  } from '../constants/recordConstants';\n  import axios from 'axios';\n  \n  \n  \n  const listRecords = () => async (dispatch) => {\n    try {\n      dispatch({ type: PRODUCT_RECORD_REQUEST });\n      const { data } = await axios.get(\n        '/api/records'\n      );\n      dispatch({ type: PRODUCT_RECORD_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({ type: PRODUCT_RECORD_FAIL, payload: error.message });\n    }\n  };\n  const saveRecord = (records) => async (dispatch, getState) => {\n    try {\n      dispatch({ type: RECORD_SAVE_REQUEST, payload: records });\n      if (!records._id) {\n        const { data } = await axios.post('/api/records', records);\n        dispatch({ type: RECORD_SAVE_SUCCESS, payload: data });\n      } else {\n        console.log('updating record cuz its found');\n        const { data } = await axios.put(\n          '/api/records/' + records.item,records);\n        dispatch({ type: RECORD_SAVE_SUCCESS, payload: data });\n      }\n    } catch (error) {\n      dispatch({ type: RECORD_SAVE_FAIL, payload: error.message });\n    }\n  };\n  \n\n\n  export {\n    saveRecord,\n    listRecords,\n  };"]},"metadata":{},"sourceType":"module"}